@model LoginApp1.Models.Account.AppRoleView

@{
    ViewBag.Title = "AddUserRole";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Ajax.BeginForm("AddUserRole", "AppRoles", null,
    new AjaxOptions
    {
        HttpMethod = "Post",
        OnBegin = "OnBegin",
        OnFailure = "OnFailure(xhr, status)",
        OnSuccess = "OnSuccess(xhr, status)"
    },
    new { id = "myform" }))
{

    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.appRole.Id)
    @Html.HiddenFor(m => m.appRole.RoleId)
    @Html.HiddenFor(m => m.appRole.Name)
    @Html.HiddenFor(m => m.appRole.Description)
    @Html.HiddenFor(m => m.status, new { @id = "hdn_status" })
    @Html.HiddenFor(m => m.key, new { @id = "hdn_key" })

    <div class="logo mb-3">
        <div class="col-md-12 text-center">
            <h2>Add or remove users for this role</h2>
        </div>
    </div>

    <div class="col-xs-1"></div>
    <div class="col-xs-10">

        <div>
            @Html.ActionLink("Back to roles list", "IndexAppRoles")
        </div>
        <div class="form-horizontal">
            <hr class="margin_bottom_small" />
            <h4>Role information:</h4>
            <div class="row margin_bottom_small">
                <div class="col-xs-3 margin_bottom_small float_left">
                    @Html.LabelFor(model => model.appRole.RoleId, htmlAttributes: new { @class = "control-label  float_left" }):
                    @Html.EditorFor(model => model.appRole.RoleId, new { htmlAttributes = new { @id = "RoleId", @class = "form-control float_left", @disabled = "disabled" } })
                </div>
                <div class="col-xs-4 margin_bottom_small">
                    @Html.LabelFor(model => model.appRole.Name, htmlAttributes: new { @class = "control-label" }):
                    @Html.EditorFor(model => model.appRole.Name, new { htmlAttributes = new { @id = "RoleName", @class = "form-control", @disabled = "disabled" } })
                </div>
                <div class="col-xs-5">
                    @Html.LabelFor(model => model.appRole.Description, htmlAttributes: new { @class = "control-label" }):
                    @Html.EditorFor(model => model.appRole.Description, new { htmlAttributes = new { @id = "RoleDescription", @class = "form-control ", @disabled = "disabled" } })
                </div>
            </div>
            <hr class="margin_top_none margin_bottom_none" />
        </div>
    </div>
    <div class="col-xs-1"></div>
    <br style="clear:both;" />

    <div class="form-horizontal">
        <div class="col-xs-1"></div>
        <div class="col-xs-10">
            <h4>Search for user to add to this role:</h4>
            <div class="row margin_bottom_small">
                <div class="col-xs-2 margin_bottom_small">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @id = "SrchEmail", @class = "form-control small_inp_box" } })
                </div>
                <div class="col-xs-3  margin_left_1em">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @id = "SrchFirstName", @class = "form-control small_inp_box" } })
                </div>
                <div class="col-xs-4  margin_left_1em">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @id = "SrchLastName", @class = "form-control small_inp_box" } })
                </div>
                <div class="col-xs-1  margin_left_2em">
                    <label class="control-label">&nbsp;</label>
                    <label class="control-label">&nbsp;</label>
                    <input type="submit" id="btn_search" name="Search" value="Search" class="btn btn-default btn-primary" />
                </div>
            </div>
        </div>
        <div class="col-xs-1"> </div>
    </div>
    <br style="clear:both;" />


    <div class="form-horizontal">
        <div class="col-xs-1"></div>
        <div class="col-xs-10">
            <h5 class="bold float_left">Search results:</h5>
            <div id="div_add_message" class="lcl_hidden">@Html.Partial("~/Views/CommonPartial/Message1.cshtml")</div>
            <div id="div_usersearch">@Html.Partial("~/Views/AppRoles/SrchUsersTable.cshtml", Model)</div>
            <br style="clear:both;" />
            <hr class="margin_bottom_vsmall margin_top_vsmall" />
        </div>
        <div class="col-xs-1"></div>
        <br style="clear:both;" />
    </div>


    <div class="form-horizontal">
        <div class="col-xs-1"></div>
        <div class="col-xs-10">
            <h5 class="bold float_left ">Assigned users:</h5>
            <div id="div_remove_message" class="lcl_hidden">@Html.Partial("~/Views/CommonPartial/Message1.cshtml")</div>
            <div id="div_roleusers">@Html.Partial("~/Views/AppRoles/RoleUsersTable.cshtml", Model)</div>
            <br style="clear:both;" />
            <hr class="margin_bottom_vsmall margin_top_vsmall" />
        </div>
        <div class="col-xs-1"></div>
        <br style="clear:both;" />
    </div>
}


@section scripts{
    <script>
        // --------------------------------------------------------------------------------
        $(document).ready(function () {
            console.log("EditAppRole: ready to rock and roll....");
            $(".small_inp_box:first").focus();
            $(".small_inp_box").addClass("lgreen");

            $("#div_usersearch").find("#tbl_usersearch").dataTable({
                searching: false, info: false, lengthChange: false 
            });
            $("#div_roleusers").find("#tbl_userroles").dataTable({
                searching: false, info: false, lengthChange: false
            });

        });

        // --------------------------------------------------------------------------------
        function AddUser(Id) {
            console.log("AddUser:" + Id);
            ShowMessage($('#div_add_message'), "Processing...", null);
            $('#hdn_key').val(Id);
            $('#hdn_status').val("AddUser");
            $('form#myform').submit();
            return false;
        }

        // --------------------------------------------------------------------------------
        function RemoveUser(Id) {
            console.log("RemoveUser:" + Id);
            ShowMessage($('#div_remove_message'), "Processing...", null);
            $('#hdn_key').val(Id);
            $('#hdn_status').val("RemoveUser");
            $('form#myform').submit();
            return false;
        }

        // --------------------------------------------------------------------------------
        function OnBegin() {
            console.log("OnBegin");
            DisableInputs(true);
        }

        // --------------------------------------------------------------------------------
        function OnSuccess(xhr, status) {
            console.log("OnSuccess");
            console.log("xhr.param1:" + xhr.responseJSON.param1);
            console.log("xhr.param2:" + xhr.responseJSON.param2);
            console.log("xhr.param3:" + xhr.responseJSON.param3);
            DisableInputs(false);

            if (xhr.responseJSON.param1 == "AddUserRole") {
                ShowMessage($('#div_add_message'), "User was added to role.", false);

                var table1 = $('#tbl_usersearch').DataTable();
                var table1_row = table1.row("#" + xhr.responseJSON.param2 + "");
                var cells1 = table1_row.data();
                table1_row.remove().draw(false);

                var table2 = $('#tbl_userroles').DataTable();
                var remove_href = cells1[4].replace(/Add/g, "Remove");
                table2.row.add([cells1[0], cells1[1], cells1[2], cells1[3], remove_href]).draw(false).node().id = xhr.responseJSON.param2;
            }

            if (xhr.responseJSON.param1 == "RemoveUserRole") {
                ShowMessage($('#div_remove_message'), "User was removed from role.", false);

                var table1 = $('#tbl_userroles').DataTable();
                var table1_row = table1.row("#" + xhr.responseJSON.param2 + "");
                var cells1 = table1_row.data();
                table1_row.remove().draw(false);

                var table2 = $('#tbl_usersearch').DataTable();
                var remove_href = cells1[4].replace(/Remove/g, "Add");
                table2.row.add([cells1[0], cells1[1], cells1[2], cells1[3], remove_href]).draw(false).node().id = xhr.responseJSON.param2;;
            }

        }

        // --------------------------------------------------------------------------------
        function OnFailure(xhr, status) {
            console.log("OnFailure");
            DisableInputs(false);
            $("#btn_submit").text("Create Account");
            if (xhr.responseJSON.param1 == "RoleName") {
                $("#RoleName").removeClass("lgreen");
                $("#RoleName").addClass("lred");
                $("#RoleNameError").removeClass("hidden");
                $("#RoleNameError").text(xhr.responseJSON.param3);
            }
        }


    </script>
}

