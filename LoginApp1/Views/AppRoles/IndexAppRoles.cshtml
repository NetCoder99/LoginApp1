@model LoginApp1.Models.Account.AppRoleView

@{
    ViewBag.Title = "IndexAppRoles";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Ajax.BeginForm("DeleteAppRole", "AppRoles", null,
    new AjaxOptions
    {
        HttpMethod = "Post",
        OnBegin = "OnBegin",
        OnFailure = "OnFailure(xhr, status)",
        OnSuccess = "OnSuccess(xhr, status)",
        UpdateTargetId = "AppRolesTable"
    },
    new { id = "myform" }))
{

    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.key, new { @id = "hiddenKey" })

    <div class="logo mb-3">
        <div class="col-md-12 text-center">
            <h2>Review and edit application roles</h2>
        </div>
    </div>

}
<div id='AppRolesTable'>
    @{ Html.RenderPartial("IndexAppRolesPartial", Model); }
</div>

@section scripts{
    <script>
        $(document).ready(function () {
            console.log("ready to rock and roll....");
            $("#tbl_roles").dataTable({ searching: false, info: false, lengthChange: false });
        });

        function Submit(Id) {
            console.log("Submit:" + Id);
            bootbox.confirm({
                title: "Delete Applicaton Role!?",
                message: "Do you want to delete this role and remove the roles from all users.",
                buttons: {
                    cancel: {
                        label: '<i class="fa fa-times"></i> Cancel'
                    },
                    confirm: {
                        label: '<i class="fa fa-check"></i> Confirm'
                    }
                },
                callback: function (result) {
                    console.log('This was logged in the callback: ' + result);
                    if (result) {
                        $('#hiddenKey').val(Id);
                        $('form#myform').submit();
                    }
                }
            });
            return false;
        }

        function OnBegin() {
            console.log("OnBegin");
            DisableInputs(true);
        }

        function OnSuccess() {
            console.log("OnSuccess");
            var status = $("#hiddenStatus").val();
            var message = $("#hiddenmessage").val();
            if (status != '') {
                console.log("Status:" + status);
            }
            if (message != '') {
                console.log("Message:" + message);
            }
            DisableInputs(false);
            ShowMessage(message, false);
        }

        function OnFailure(xhr, status) {
            console.log("OnFailure");
            DisableInputs(false);
        }

        function DisableInputs(flag) {
            if (flag) {
                $(".small_inp_box").prop("disabled", true);
                $("input:password").prop("disabled", true);
                $("#btn_submit").prop("disabled", true);
                $("#btn_submit").text("Processing", true);
            }
            else {
                $(".small_inp_box").prop("disabled", false);
                $("input:password").prop("disabled", false);
                $("#btn_submit").prop("disabled", false);
                $("#btn_submit").text("Save Role");
            }
        }

        function ShowMessage(message, error) {
            if (error) {
                $("#img_success").hide();
                $("#img_warning").show();
            }
            else {
                $("#img_success").show();
                $("#img_warning").hide();
            }
            $("#lbl_message").text(message);
            $("#div_message").show();
            setTimeout(function () {
                $("#div_message").hide();
            }, 5000);
        }

    </script>
}
