@model  LoginApp1.Models.Account.ResetPassword

@{
    ViewBag.Title = "ResetPassword";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Ajax.BeginForm("ResetPassword", "Account", null,
    new AjaxOptions
    {
        HttpMethod = "POST",
        OnBegin = "OnBegin",
        OnSuccess = "OnSuccess(xhr)",
        OnFailure = "OnFailure(xhr)"
    },
    new { id = "myform" }))
{

    @Html.AntiForgeryToken()
    @Html.HiddenFor(m=>m.ProcessStatus, new { id= "ProcessStatus" })

    <br />
    <div class="row">
        <div class="col-md-3"></div>
        <div class="col-md-6 center-block">
            <div class="form-group col-xs-12">
                <h2>Reset Password</h2>
            </div>
        </div>
        <div class="col-md-3"></div>
    </div>

    <div class="row">
        <div class="col-md-3"></div>
        <div class="col-md-6 center-block">

            <div id="div_email" class="form-group col-xs-12">
                <label for="exampleInputEmail1">Please verify your email address</label>
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control small_inp_box lgreen" })
                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger static_error display_block", @id = "EmailError" })
            </div>

            <div id="div_reset_code" class="form-group col-xs-12 hidden">
                <label>Please enter the reset code</label>
                @Html.TextBoxFor(m => m.TempResetCode, new { @class = "form-control small_inp_box lgreen" })
                @Html.ValidationMessageFor(m => m.TempResetCode, "", new { @class = "text-danger static_error display_block", @id = "ResetError" })
            </div>

            <div id="div_password" class="form-group col-xs-12 hidden">
                <label>Please enter the new password</label>
                @Html.PasswordFor(m => m.Password, new { @class = "form-control small_inp_box lgreen" })
                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger static_error display_block", @id = "ResetError" })
            </div>

            <div id="div_password_confirm" class="form-group col-xs-12 hidden">
                <label>Please confirm the new password</label>
                @Html.PasswordFor(m => m.PasswordConfirm, new { @class = "form-control small_inp_box lgreen" })
                @Html.ValidationMessageFor(m => m.PasswordConfirm, "", new { @class = "text-danger static_error display_block", @id = "ResetError" })
            </div>

            <div id="div_password_updated" class="form-group col-xs-12 hidden">
                <img src="~/Content/Icons/success.png" height="18px"/>
                <label>Your password has been changed click below to login.</label>
            </div>

            <div class="form-group col-xs-12">
                <label>Click here to send code</label>
                <button id="btn_submit" type="submit" class="btn btn-block mybtn btn-primary tx-tfm" style="width:12em;">Send Reset Code</button>
            </div>

        </div>
        <div class="col-md-3"></div>
    </div>


}

@section scripts{
    <script>
        $(document).ready(function () {
            console.log("ready to rock and roll....");
            $(".small_inp_box:first").focus();
            $(".small_inp_box").addClass("lgreen");
            $("input:password").addClass("lgreen");
            $("input:password").addClass("form-control");
        });

        function OnBegin() {
            console.log("OnBegin");
            DisableInputs(true);
        }

        function OnSuccess(xhr) {
            console.log("OnSuccess");
            DisableInputs(false);
            console.log(xhr.responseJSON.param1 + ":" + xhr.responseJSON.param2);
            if (xhr.responseJSON.param2 == "waiting") {
                $("#div_reset_code").removeClass("hidden");
                $("#btn_submit").text("Enter Reset Code");
                $("#ProcessStatus").val(xhr.responseJSON.param2);
                ProcessStatus
            }
            if (xhr.responseJSON.param2 == "validcode") {
                $("#div_reset_code").addClass("hidden");
                $("#div_password").removeClass("hidden");
                $("#div_password_confirm").removeClass("hidden");
                $("#btn_submit").text("Submit New Password");
                $("#ProcessStatus").val(xhr.responseJSON.param2);
            }
            if (xhr.responseJSON.param2 == "passupdated") {
                $("#div_email").addClass("hidden");
                $("#div_reset_code").addClass("hidden");
                $("#div_password").addClass("hidden");
                $("#div_password_confirm").addClass("hidden");
                $("#div_password_updated").removeClass("hidden");
                $("#btn_submit").text("Login");
                $("#ProcessStatus").val("login");
            }
            if (xhr.responseJSON.param1 == "gotologin") {
                window.location.href = xhr.responseJSON.param2;
            }


        }


        function OnFailure(xhr) {
            console.log("OnFailure");
            DisableInputs(false);
            console.log(xhr.responseJSON.param1 + ":" + xhr.responseJSON.param2);
            if (xhr.responseJSON.param2 == "invalidcode") {
                $("#TempResetCode").removeClass("lgreen");
                $("#TempResetCode").addClass("lred");
                $("#TempResetCode").focus();
                $("#ResetError").text("Invalid reset code.");
                $("#btn_submit").text("Enter Reset Code");
                $("#ProcessStatus").val(xhr.responseJSON.param2);
            }

            if (xhr.responseJSON.param2 == "invalidpass") {
                //$("#TempResetCode").removeClass("lgreen");
                //$("#TempResetCode").addClass("lred");
                //$("#TempResetCode").focus();
                //$("#ResetError").text("Invalid reset code.");
                //$("#btn_submit").text("Enter Reset Code");
                //$("#ProcessStatus").val(xhr.responseJSON.param2);
            }
        }

        function DisableInputs(flag) {
            if (flag) {
                $(".small_inp_box").prop("disabled", true);
                $("input:password").prop("disabled", true);
                $("#btn_submit").prop("disabled", true);
                $("#btn_submit").text("Processing", true);
            }
            else {
                $(".small_inp_box").prop("disabled", false);
                $("input:password").prop("disabled", false);
                $("#btn_submit").prop("disabled", false);
                $("#btn_submit").text("Send Reset Code");
            }
        }

        $("input:password").focusout(function () {
            console.log("checking for invalids");
            var fv = $('#myform').validate();
            if (!$(this).valid()) {
                $(this).removeClass("lgreen");
                $(this).addClass("lred");
                if (this.name == "PasswordConfirm" || this.name == "Password") {
                    console.log("PasswordConfirm was invalid");
                }
                else {
                    $(this).addClass("lred");
                    $(this).removeClass("lgreen");
                }
            }
            else {
                if (this.name == "PasswordConfirm" || this.name == "Password") {
                    console.log("PasswordConfirm was valid");
                    $("#Password").removeClass("lred");
                    $("#Password").addClass("lgreen");
                    $("#PasswordConfirm").removeClass("lred");
                    $("#PasswordConfirm").addClass("lgreen");
                }
                else {
                    $(this).addClass("lgreen");
                    $(this).removeClass("lred");
                }
                console.log("valid!");
            }
        });


        $(".small_inp_box").focusout(function () {
            console.log("checking for invalids");
            var fv = $('#myform').validate();
            if (!$(this).valid()) {
                $(this).removeClass("lgreen");
                $(this).addClass("lred");
            }
            else {
                $(this).addClass("lgreen");
                $(this).removeClass("lred");
                console.log("valid!");
            }
        });

    </script>
}

